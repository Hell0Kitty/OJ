/**
 * Definition of TreeNode:
 * class TreeNode {
 * public:
 *     int val;
 *     TreeNode *left, *right;
 *     TreeNode(int val) {
 *         this->val = val;
 *         this->left = this->right = NULL;
 *     }
 * }
 */
class Solution {
public:
    /**
     * @param root: The root of binary tree.
     * @return: True if this Binary tree is Balanced, or false.
     */
    bool ERROR_FLAG = 1;
    bool isBalanced(TreeNode *root) {
        // write your code here
        subTreeHeight(root);
        return ERROR_FLAG;
    }
    int subTreeHeight(TreeNode * root){
        if(root == NULL){
            return 0; // it is fine to use either 0 or 1 here, since we take difference in the end
        }
        int r = -1, l = -1;
        l = subTreeHeight(root -> left);
        r = subTreeHeight(root -> right);
        if(abs(l - r) > 1){
            ERROR_FLAG = 0;
        }  
        return max(l,r) + 1;
    }
};